服务器端：
	
#include <sys/types.h>  
#include <sys/socket.h>  
#include <stdio.h>  
#include <netinet/in.h>  
#include <arpa/inet.h>  
#include <unistd.h>  
#include <string.h>  
#include <stdlib.h>  
#include <fcntl.h>  
#include <sys/shm.h>

#define PORT 8888
#define QUEUE 20
#define BUFFER_SIZE 1024

int main()
{
	int sockfd,con,n,i=0;
	char buf[BUFFER_SIZE];
	struct sockaddr_in server,client;
		n=sizeof(client);
	sockfd=socket(AF_INET,SOCK_STREAM,0);
	
	bzero(&server,sizeof(server));
	server.sin_family=AF_INET;
	server.sin_port=htons(PORT);
	server.sin_addr.s_addr=htonl(INADDR_ANY);
	
	bind(sockfd,(struct sockaddr*)&server,sizeof(server));
	
	listen(sockfd,QUEUE);
	
	printf("waiting for the client to connect\n");
	con=accept(sockfd,(struct sockaddr*)&client,&n);
	printf("successfule\n");
	while(1){
		i++;
		memset(buf,0,sizeof(buf));
		recv(con,buf,sizeof(buf),0);
		printf("the buf recived from client is:%s\n",buf);
		memset(buf,0,sizeof(buf));
		sprintf(buf,"i'm the server,the message send to client is %d\n",i);
		send(con,buf,strlen(buf),0);
	}
	close(sockfd);
	close(con);
	return 0;
}
		
    
    客户端：
    #include <sys/types.h>  
#include <sys/socket.h>  
#include <stdio.h>  
#include <netinet/in.h>  
#include <arpa/inet.h>  
#include <unistd.h>  
#include <string.h>  
#include <stdlib.h>  
#include <fcntl.h>  
#include <sys/shm.h> 

#define PORT 8888
#define BUFFER_SIZE 1024

int main()
{
	char buf[BUFFER_SIZE];
	int sockfd;
	struct sockaddr_in server;
	
	sockfd=socket(AF_INET,SOCK_STREAM,0);
	
	bzero(&server,sizeof(server));
	server.sin_family=AF_INET;
	server.sin_port=htons(PORT);
	server.sin_addr.s_addr=htonl(INADDR_ANY);
	
	connect(sockfd,(struct sockaddr*)&server,sizeof(server));
	while(1){
		memset(buf,0,sizeof(buf));
		printf("please input the message\n");
		gets(buf);
		send(sockfd,buf,strlen(buf),0);
		memset(buf,0,sizeof(buf));
		recv(sockfd,buf,sizeof(buf),0);
		printf("recievd from the server is:%s\n",buf);
		
	}
	close(sockfd);
}
		
	
    
