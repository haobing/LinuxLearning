服务器端：
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<unistd.h>
#include<sys/socket.h>
#include<netinet/in.h>

#define MAXLINE 80
#define PORT 8888

int main()
{
	int n,sockfd,len,i=0;
	struct sockaddr_in server, client;
	len=sizeof(client);
	char buf[MAXLINE];
	char message[MAXLINE];
	
	sockfd=socket(AF_INET,SOCK_DGRAM,0);
	
	bzero(&server,sizeof(server));
	server.sin_family=AF_INET;
	server.sin_port=htons(PORT);
	server.sin_addr.s_addr=htonl(INADDR_ANY);
	
	bind(sockfd,(struct sockaddr*)&server,sizeof(server));
	
	while(1){
		i++;
		memset(buf,0,sizeof(buf));
		n=recvfrom(sockfd,buf,sizeof(buf),0,(struct sockaddr*)&client,&len);
		printf("the server recievd:%s\n",buf);
		sprintf(message,"this is the server send %d times message\n",i);
		n=sendto(sockfd,message,strlen(message),0,(struct sockaddr*)&client,len);
	}
	
	close(sockfd);
}


客户端：
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<unistd.h>
#include<sys/socket.h>
#include<netinet/in.h>

#define MAXLINE 80
#define PORT 8888

int main()
{
	int n,sockfd,len;
	struct sockaddr_in server;
	char buf[MAXLINE];
	len=sizeof(server);
	
	sockfd=socket(AF_INET,SOCK_DGRAM,0);
	
	bzero(&server,sizeof(server));
	server.sin_family=AF_INET;
	server.sin_port=htons(PORT);
	server.sin_addr.s_addr=htonl(INADDR_ANY);
	
	while(1){
		printf("please input the messaget send to server\n");
		gets(buf);
		sendto(sockfd,buf,strlen(buf),0,(struct sockaddr*)&server,len);
		printf("sendto successful\n");
		memset(buf,0,sizeof(buf));
		recvfrom(sockfd,buf,sizeof(buf),0,(struct sockaddr*)&server,&len);
		printf("the server send message is:%s\n",buf);
	}
	close(sockfd);
}
	
