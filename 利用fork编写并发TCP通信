服务器端：
#include <sys/types.h>  
#include <sys/socket.h>  
#include <stdio.h>  
#include <netinet/in.h>  
#include <arpa/inet.h>  
#include <unistd.h>  
#include <string.h>  
#include <stdlib.h>  
#include <fcntl.h>  
#include <sys/shm.h>

#define PORT 8888
#define BUFFER_SIZE 1024
#define QUEUE 20

int main()
{
	char buf[BUFFER_SIZE];
	int sockfd,con,len;
	struct sockaddr_in server,client;
	pid_t pid;
	len=sizeof(server);
	
	sockfd=socket(AF_INET,SOCK_STREAM,0);
	
	bzero(&server,sizeof(server));
	server.sin_family=AF_INET;
	server.sin_port=htons(PORT);
	server.sin_addr.s_addr=htonl(INADDR_ANY);
	
	bind(sockfd,(struct sockaddr*)&server,len);
	
	listen(sockfd,QUEUE);
	while(1){
		con=accept(sockfd,(struct sockaddr*)&client,&len);
		if((pid=fork())==0){
			close(sockfd);
			char message[BUFFER_SIZE];
			int i=0;
			while(1){
				i++;
				memset(message,0,sizeof(message));
				recv(con,message,sizeof(message),0);
				printf("recieve from client is:%s\n",message);
				memset(message,0,sizeof(message));
				sprintf(message,"the times=%d\n",i);
				send(con,message,strlen(message),0);
			}
		}
		close(con);
	}
}




客户端：
#include <sys/types.h>  
#include <sys/socket.h>  
#include <stdio.h>  
#include <netinet/in.h>  
#include <arpa/inet.h>  
#include <unistd.h>  
#include <string.h>  
#include <stdlib.h>  
#include <fcntl.h>  
#include <sys/shm.h>

#define PORT 8888
#define BUFFER_SIZE 1024

int main()
{
	int sockfd,len;
	struct sockaddr_in server;
	len=sizeof(server);
	
	sockfd=socket(AF_INET,SOCK_STREAM,0);
	
	bzero(&server,sizeof(server));
	server.sin_family=AF_INET;
	server.sin_port=htons(PORT);
	server.sin_addr.s_addr=htonl(INADDR_ANY);
	
	connect(sockfd,(struct sockaddr*)&server,len);
	
	char buf[BUFFER_SIZE];
	
	while(1){
		memset(buf,0,sizeof(buf));
		printf("please input some words\n");
		fgets(buf,sizeof(buf),stdin);
		send(sockfd,buf,strlen(buf),0);
		memset(buf,0,sizeof(buf));
		recv(sockfd,buf,sizeof(buf),0);
		fputs(buf,stdout);
	}
	close(sockfd);
}
		
